curl google.com                //to fetch any website code 
top                           // to have a real time porccess monitor  
sudo apt update               // to update  ( On the Linux machine, there is an index of all the packages and versions on the Ubuntu servers. )
info [options] <command_name>   // info about a command for example info ls 
man [options] <command_name>     // traditional way to get info about a command for example man ls or man mkdir
xz -k  codeacademy.png           // compress the file that has .xz extension -k option keep original and compress file 
bzip2 -d riddles/*.bz2           // bzip2 compress file with .bz2 extension it is -d option is used for decompressing 
unzip important.zip              // to unzip a file 
zip riddles.zip -r riddles     // to zip a directory 
tar -xf files.tar              // to extract tar file 
tar -cf text_files.tar  *.txt    // to create a tar file



                                            /////TAR FILES ///////

Compressing .tar Files
11 min

What makes tar powerful is that we can combine it with the compression utilities we discussed in a previous exercise to create a compressed archive. 
tar with the -c and -f options relate to archiving functionalities, but we can also call tar with other options to compress:

    -z : Compress the resulting archive using gzip. Resulting file extension: .tar.gz.
    -j : Compress the resulting archive using bzip2. Resulting file extension: .tar.bz2.
    -J : Compress the resulting archive using xz. Resulting file extension: .tar.xz.

For example, to compress an archive/tarball of some video files video1.mp4 and video2.mkv, where we want the resulting compress archive to be called videos.tar.bz2 we use the following command:

tar -cjf videos.tar.bz2 video1.mp4 video2.mkv



Decompressing and Extracting .tar Files

To extract and decompress a compressed .tar archive, we change the option -c to -x:

tar -xjf videos.tar.bz2








                                                 //////network and interaction//////////////////




Interacting with Files Hosted Online

Letâ€™s start simple: how do we access files from the Internet in the command line? There are two commands that allow us to do just that: curl and wget. Either command lets us establish a connection with a server. We can also use them to download the file at the destination.

$ curl <URL in quotes>

displays the contents of the file at the URL in terminal.

The option -o or -output combined with a desired name

$ curl <URL> --output <desired_filename>

lets us write the contents of the online file to the filename! For example, curl -O "https://www.google.com" --output frontpage.html will download the HTML file of the Google homepage to a local file called frontpage.html.

There are more commands if we type curl --help or wget --help. As always, you can also use the man command to read about the commands.
Checking Network Connectivity

How can we check whether two devices connected to the same network can communicate with one another? Simple! We use a command called ping, short for Packet INternet Groper. The command

ping [options] <target domain or IP>

sends packets to the target host and waits for replies. If the ping command returns with a failure, that means the target is unreachable.
DNS Resolution

What if we wanted to find out the IP address for any given domain name or vice versa? This process is known as DNS lookup or DNS resolution and the host command lets us do exactly that. The basic syntax for the host command is: host <domain or IP>.

For example, the command host google.com will generate the following output:

google.com has address 142.250.72.238
google.com has IPv6 address 2607:f8b0:4007:817::200e
google.com mail is handled by 20 alt1.aspmx.l.google.com.
google.com mail is handled by 40 alt3.aspmx.l.google.com.
google.com mail is handled by 30 alt2.aspmx.l.google.com.
google.com mail is handled by 10 aspmx.l.google.com.
google.com mail is handled by 50 alt4.aspmx.l.google.com.

Network Interface Status

The ifconfig command, or interface configurator, is one of the network inspection commands available on Linux. Running it will display IP addresses, MAC addresses, and some more relevant details.

